
warning: field `all_envs` is never read
  --> src\script_vals.rs:33:9
   |
27 |  pub struct Stuff {
   |             ----- field in this struct
...
33 |     pub all_envs : Vec<StuffEnv>,
   |         ^^^^^^^^

warning: `bevy_table_uix` (lib) generated 3 warnings
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.42s
     Running `target\debug\examples\test.exe`
Hello, world!
2025-09-11T06:32:58.003686Z  INFO bevy_render::renderer: AdapterInfo { name: "NVIDIA GeForce RTX 4060", vendor: 4318, device: 10370, device_type: DiscreteGpu, driver: "NVIDIA", driver_info: "580.88", backend: Vulkan }
2025-09-11T06:32:58.269657Z  INFO bevy_app: bevy_render::batching::gpu_preprocessing: GPU preprocessing is fully supported on this device.
2025-09-11T06:32:58.279516Z  INFO bevy_app: bevy_winit::system: Creating new window uix test (0v1)
root is 6v1
asset  LoadedWithDependencies { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }
asset  Added { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }


Node { names: {}, ignore_applies: {} }, applies=[], after=0
    Stub { name: "test" }, applies=[], after=0
        Script { record: Record { parent: Some(1), children: 3..5, children_text: true, conf_values: 2..3, param_groups: 1..1, node_label: None, branch_name: Some(4), tag: true } }, applies=[], after=0
        Node { names: {"x"}, ignore_applies: {} }, applies=[7], after=0
            Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Apply { name: "y", owner_apply_decl_id: None, used: true }, applies=[], after=0
                Script { record: Record { parent: Some(21), children: 15..16, children_text: true, conf_values: 14..15, param_groups: 5..5, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=0
            Node { names: {"y"}, ignore_applies: {} }, applies=[], after=1
            Script { record: Record { parent: Some(9), children: 19..20, children_text: true, conf_values: 18..19, param_groups: 6..6, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=1
        Node { names: {}, ignore_applies: {} }, applies=[], after=0
            Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Script { record: Record { parent: Some(10), children: 27..28, children_text: true, conf_values: 26..27, param_groups: 9..9, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=0
        Node { names: {}, ignore_applies: {} }, applies=[], after=0
            Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "pressable", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Script { record: Record { parent: Some(11), children: 36..49, children_text: true, conf_values: 35..36, param_groups: 13..13, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=0
    Node { names: {}, ignore_applies: {} }, applies=[], after=0
        Attrib { name: "padding_left", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "padding_right", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "padding_top", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "padding_bottom", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "hgap", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "vgap", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "span", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Script { record: Record { parent: Some(2), children: 59..64, children_text: true, conf_values: 58..59, param_groups: 18..18, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=0


=====
node {}, e=0, ignaps={}, from=0, params={22}, scr=true, ascr=true, orig=_
    stub "test", e=1, from=0, params={3, 9, 11, 16}, scr=true, ascr=true, orig=_
        script, e=2, from=1, params={}, scr=true, ascr=false
        node {"x"}, e=3, ignaps={}, from=1, params={9}, scr=true, ascr=true, orig=_
            attrib "color", e=4, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=3, params={}, scr=false, ascr=false, orig=_
            attrib "width", e=5, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=3, params={}, scr=false, ascr=false, orig=_
            attrib "height", e=6, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=3, params={}, scr=false, ascr=false, orig=_
            apply, e=7 : "y", from=3, params={}, used=true, scr=true, ascr=false
                script, e=8, from=7, params={}, scr=true, ascr=false
            node {"y"}, e=9, ignaps={}, from=3, params={}, scr=false, ascr=false, orig=_
                apply use, e=32 : e2=7, from=3, params={}, scr=false, ascr=false
            script, e=10, from=3, params={}, scr=true, ascr=false
        node {}, e=11, ignaps={}, from=1, params={}, scr=true, ascr=false, orig=_
            attrib "color", e=12, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=11, params={}, scr=false, ascr=false, orig=_
            attrib "width", e=13, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=11, params={}, scr=false, ascr=false, orig=_
            attrib "height", e=14, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=11, params={}, scr=false, ascr=false, orig=_
            script, e=15, from=11, params={}, scr=true, ascr=false
        node {}, e=16, ignaps={}, from=1, params={}, scr=true, ascr=false, orig=_
            attrib "color", e=17, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=16, params={}, scr=false, ascr=false, orig=_
            attrib "width", e=18, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=16, params={}, scr=false, ascr=false, orig=_
            attrib "height", e=19, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=16, params={}, scr=false, ascr=false, orig=_
            attrib "pressable", e=20, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=16, params={}, scr=false, ascr=false, orig=_
            script, e=21, from=16, params={}, scr=true, ascr=false
    node {}, e=22, ignaps={}, from=0, params={}, scr=true, ascr=false, orig=_
        attrib "padding_left", e=23, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "padding_right", e=24, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "padding_top", e=25, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "padding_bottom", e=26, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "color", e=27, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "hgap", e=28, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "vgap", e=29, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "span", e=30, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        script, e=31, from=22, params={}, scr=true, ascr=false
root
    call_stub 0, is_root=true
    stub "test"
        call_stub 1, is_root=false
        script
        script
        decl Node(3)([]), => [(None, ApplyDecl(7))]
            decl Apply(7)([]), => []
                script
            script
        call_node Node(3)([Node(3)]), in_func=false, ret=true
        decl Node(11)([]), => []
            script
        call_node Node(11)([Node(11)]), in_func=false, ret=false
        decl Node(16)([]), => []
            script
            script
            script
            script
            script
            script
            script
            script
            script
            script
            script
            script
            script
        call_node Node(16)([Node(16)]), in_func=false, ret=false
        call_apply Some((Node(3), [])) ApplyDecl(7)([Node(9)]) => None
    decl Node(22)([]), => []
        script
        script
        script
        script
        script
    call_node Node(22)([Node(22)]), in_func=false, ret=false
===

var root, _stubs
var _ns [call _stubs 0 root]
var env _ns.e0
fn stub_test (self) {
    var _ns [call _stubs 1 self]
    #var node_x self.children.x.0
    #var node_x env.x.0
    fn _n3 (self) {
        fn _a7 (self) {
            var hello 5;
        }
        println "hello1 {self}"
        return [dict ("a7" _a7)]
    }
    var _rn3 [call _n3 _ns.n3]
    fn _n11 (self) {
        println "hello2 {self}"
    }
    call _n11 _ns.n11
    fn _n16 (self) {
        println "hello3 {self}"
        var a 0.0
        add_event_listener self "click" [fn () {
            println "hello {self} {}" (cos a)
            println "col {}" self.color.rgb
            set self.color.rgb (vec3 (abs (* (cos a) (sin a))) 1.0 0.2)
            set a (+ a 0.1)
            #println "is {}" self.parent.children.x
            #println self.parent.children.0
            #set self.parent.children.0.hide true
            #set self.parent.children.x.0.hide true
            #set node_x.hide true
        }]
    }
    call _n16 _ns.n16
    call _rn3.a7 _ns.n9
}
fn _n22 (self) {
    println "hello0 {self}"
    call stub_test self
    call stub_test self
    call stub_test self
    call stub_test self
}
call _n22 _ns.n22

====
hello0 7v1
hello1 8v1
hello2 10v1
hello3 11v1
hello1 12v1
hello2 14v1
hello3 15v1
hello1 16v1
hello2 18v1
hello3 19v1
hello1 20v1
hello2 22v1
hello3 23v1
2025-09-11T06:33:32.579208Z  INFO system{name="bevy_window::system::exit_on_all_closed"}: bevy_window::system: No windows are open, exiting
2025-09-11T06:33:32.580548Z  INFO system{name="bevy_winit::system::despawn_windows"}: bevy_winit::system: Closing window 0v1
PS C:\Users\someone\Desktop\code2\ok3\bevy_table_uix> ^C
PS C:\Users\someone\Desktop\code2\ok3\bevy_table_uix>
PS C:\Users\someone\Desktop\code2\ok3\bevy_table_uix>  & 'c:\Users\someone\.vscode\extensions\vadimcn.vscode-lldb-1.11.5\adapter\codelldb.exe' 'terminal-agent' '--connect=53213'
   Compiling bevy_table_uix v0.1.0 (C:\Users\someone\Desktop\code2\ok3\bevy_table_uix)
warning: fields `by_ind` and `by_name` are never read
  --> src\script_vals.rs:18:9
   |
17 | pub struct StuffEnv {
   |            -------- fields in this struct
18 |     pub by_ind : Vec<usize>, //[local_node_ind]=node_element_ind
   |         ^^^^^^
19 |     pub by_name : HashMap<StringT,Vec<usize>> //[node_name]=node_element_inds
   |         ^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: struct `StuffResultEnv` is never constructed
  --> src\script_vals.rs:22:12
   |
22 | pub struct StuffResultEnv {
   |            ^^^^^^^^^^^^^^

warning: field `all_envs` is never read
  --> src\script_vals.rs:33:9
   |
27 |  pub struct Stuff {
   |             ----- field in this struct
...
33 |     pub all_envs : Vec<StuffEnv>,
   |         ^^^^^^^^

warning: `bevy_table_uix` (lib) generated 3 warnings
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 8.54s
     Running `target\debug\examples\test.exe`
Hello, world!
2025-09-11T07:33:46.361565Z  INFO bevy_render::renderer: AdapterInfo { name: "NVIDIA GeForce RTX 4060", vendor: 4318, device: 10370, device_type: DiscreteGpu, driver: "NVIDIA", driver_info: "580.88", backend: Vulkan }
2025-09-11T07:33:46.614441Z  INFO bevy_app: bevy_render::batching::gpu_preprocessing: GPU preprocessing is fully supported on this device.
2025-09-11T07:33:46.624667Z  INFO bevy_app: bevy_winit::system: Creating new window uix test (0v1)
root is 6v1
asset  LoadedWithDependencies { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }
asset  Added { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }


Node { names: {}, ignore_applies: {} }, applies=[], after=0
    Stub { name: "test" }, applies=[], after=0
        Script { record: Record { parent: Some(1), children: 3..5, children_text: true, conf_values: 2..3, param_groups: 1..1, node_label: None, branch_name: Some(4), tag: true } }, applies=[], after=0
        Node { names: {"x"}, ignore_applies: {} }, applies=[7], after=0
            Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Apply { name: "y", owner_apply_decl_id: None, used: true }, applies=[], after=0
                Script { record: Record { parent: Some(21), children: 15..16, children_text: true, conf_values: 14..15, param_groups: 5..5, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=0
            Node { names: {"y"}, ignore_applies: {} }, applies=[], after=1
            Script { record: Record { parent: Some(9), children: 19..20, children_text: true, conf_values: 18..19, param_groups: 6..6, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=1
        Node { names: {}, ignore_applies: {} }, applies=[], after=0
            Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Script { record: Record { parent: Some(10), children: 27..28, children_text: true, conf_values: 26..27, param_groups: 9..9, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=0
        Node { names: {}, ignore_applies: {} }, applies=[], after=0
            Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "pressable", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Script { record: Record { parent: Some(11), children: 36..49, children_text: true, conf_values: 35..36, param_groups: 13..13, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=0
    Node { names: {}, ignore_applies: {} }, applies=[], after=0
        Attrib { name: "padding_left", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "padding_right", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "padding_top", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "padding_bottom", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "hgap", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "vgap", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "span", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Script { record: Record { parent: Some(2), children: 59..64, children_text: true, conf_values: 58..59, param_groups: 18..18, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=0


=====
node {}, e=0, ignaps={}, from=0, params={22}, scr=true, ascr=true, orig=_
    stub "test", e=1, from=0, params={3, 9, 11, 16}, scr=true, ascr=true, orig=_
        script, e=2, from=1, params={}, scr=true, ascr=false
        node {"x"}, e=3, ignaps={}, from=1, params={9}, scr=true, ascr=true, orig=_
            attrib "color", e=4, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=3, params={}, scr=false, ascr=false, orig=_
            attrib "width", e=5, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=3, params={}, scr=false, ascr=false, orig=_
            attrib "height", e=6, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=3, params={}, scr=false, ascr=false, orig=_
            apply, e=7 : "y", from=3, params={}, used=true, scr=true, ascr=false
                script, e=8, from=7, params={}, scr=true, ascr=false
            node {"y"}, e=9, ignaps={}, from=3, params={}, scr=false, ascr=false, orig=_
                apply use, e=32 : e2=7, from=3, params={}, scr=false, ascr=false
            script, e=10, from=3, params={}, scr=true, ascr=false
        node {}, e=11, ignaps={}, from=1, params={}, scr=true, ascr=false, orig=_
            attrib "color", e=12, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=11, params={}, scr=false, ascr=false, orig=_
            attrib "width", e=13, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=11, params={}, scr=false, ascr=false, orig=_
            attrib "height", e=14, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=11, params={}, scr=false, ascr=false, orig=_
            script, e=15, from=11, params={}, scr=true, ascr=false
        node {}, e=16, ignaps={}, from=1, params={}, scr=true, ascr=false, orig=_
            attrib "color", e=17, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=16, params={}, scr=false, ascr=false, orig=_
            attrib "width", e=18, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=16, params={}, scr=false, ascr=false, orig=_
            attrib "height", e=19, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=16, params={}, scr=false, ascr=false, orig=_
            attrib "pressable", e=20, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=16, params={}, scr=false, ascr=false, orig=_
            script, e=21, from=16, params={}, scr=true, ascr=false
    node {}, e=22, ignaps={}, from=0, params={}, scr=true, ascr=false, orig=_
        attrib "padding_left", e=23, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "padding_right", e=24, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "padding_top", e=25, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "padding_bottom", e=26, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "color", e=27, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "hgap", e=28, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "vgap", e=29, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "span", e=30, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        script, e=31, from=22, params={}, scr=true, ascr=false
root
    call_stub 0, is_root=true
    stub "test"
        call_stub 1, is_root=false
        script
        script
        decl Node(3)([]), => [(None, ApplyDecl(7))]
            decl Apply(7)([]), => []
                script
            script
        call_node Node(3)([Node(3)]), in_func=false, ret=true
        decl Node(11)([]), => []
            script
        call_node Node(11)([Node(11)]), in_func=false, ret=false
        decl Node(16)([]), => []
            script
            script
            script
            script
            script
            script
            script
            script
            script
            script
            script
            script
            script
        call_node Node(16)([Node(16)]), in_func=false, ret=false
        call_apply Some((Node(3), [])) ApplyDecl(7)([Node(9)]) => None
    decl Node(22)([]), => []
        script
        script
        script
        script
        script
    call_node Node(22)([Node(22)]), in_func=false, ret=false
===

var root, _stubs
var _ns [call _stubs 0 root]
var env _ns.e0
fn stub_test (self) {
    var _ns [call _stubs 1 self]
    #var node_x self.children.x.0
    #var node_x env.x.0
    fn _n3 (self) {
        fn _a7 (self) {
            var hello 5;
        }
        println "hello1 {self}"
        return [dict ("a7" _a7)]
    }
    var _rn3 [call _n3 _ns.n3]
    fn _n11 (self) {
        println "hello2 {self}"
    }
    call _n11 _ns.n11
    fn _n16 (self) {
        println "hello3 {self}"
        var a 0.0
        add_event_listener self "click" [fn () {
            println "hello {self} {}" (cos a)
            println "col {}" self.color.rgb
            set self.color.rgb (vec3 (abs (* (cos a) (sin a))) 1.0 0.2)
            set a (+ a 0.1)
            #println "is {}" self.parent.children.x
            #println self.parent.children.0
            #set self.parent.children.0.hide true
            #set self.parent.children.x.0.hide true
            #set node_x.hide true
        }]
    }
    call _n16 _ns.n16
    call _rn3.a7 _ns.n9
}
fn _n22 (self) {
    println "hello0 {self}"
    call stub_test self
    call stub_test self
    call stub_test self
    call stub_test self
}
call _n22 _ns.n22

====
hello0 7v1
hello1 8v1
hello2 10v1
hello3 11v1
hello1 12v1
hello2 14v1
hello3 15v1
hello1 16v1
hello2 18v1
hello3 19v1
hello1 20v1
hello2 22v1
hello3 23v1
exit!
PS C:\Users\someone\Desktop\code2\ok3\bevy_table_uix> ^C
PS C:\Users\someone\Desktop\code2\ok3\bevy_table_uix>
PS C:\Users\someone\Desktop\code2\ok3\bevy_table_uix>  & 'c:\Users\someone\.vscode\extensions\vadimcn.vscode-lldb-1.11.5\adapter\codelldb.exe' 'terminal-agent' '--connect=56109'
warning: fields `by_ind` and `by_name` are never read
  --> src\script_vals.rs:18:9
   |
17 | pub struct StuffEnv {
   |            -------- fields in this struct
18 |     pub by_ind : Vec<usize>, //[local_node_ind]=node_element_ind
   |         ^^^^^^
19 |     pub by_name : HashMap<StringT,Vec<usize>> //[node_name]=node_element_inds
   |         ^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: struct `StuffResultEnv` is never constructed
  --> src\script_vals.rs:22:12
   |
22 | pub struct StuffResultEnv {
   |            ^^^^^^^^^^^^^^

warning: field `all_envs` is never read
  --> src\script_vals.rs:33:9
   |
27 |  pub struct Stuff {
   |             ----- field in this struct
...
33 |     pub all_envs : Vec<StuffEnv>,
   |         ^^^^^^^^

warning: `bevy_table_uix` (lib) generated 3 warnings
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.46s
     Running `target\debug\examples\test.exe`
Hello, world!
2025-09-11T07:44:06.262655Z  INFO bevy_render::renderer: AdapterInfo { name: "NVIDIA GeForce RTX 4060", vendor: 4318, device: 10370, device_type: DiscreteGpu, driver: "NVIDIA", driver_info: "580.88", backend: Vulkan }
2025-09-11T07:44:06.519530Z  INFO bevy_app: bevy_render::batching::gpu_preprocessing: GPU preprocessing is fully supported on this device.
2025-09-11T07:44:06.531776Z  INFO bevy_app: bevy_winit::system: Creating new window uix test (0v1)
root is 6v1
asset  LoadedWithDependencies { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }
asset  Added { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }


Node { names: {}, ignore_applies: {} }, applies=[], after=0
    Stub { name: "test" }, applies=[], after=0
        Script { record: Record { parent: Some(1), children: 3..5, children_text: true, conf_values: 2..3, param_groups: 1..1, node_label: None, branch_name: Some(4), tag: true } }, applies=[], after=0
        Node { names: {"x"}, ignore_applies: {} }, applies=[7], after=0
            Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Apply { name: "y", owner_apply_decl_id: None, used: true }, applies=[], after=0
                Script { record: Record { parent: Some(21), children: 15..16, children_text: true, conf_values: 14..15, param_groups: 5..5, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=0
            Node { names: {"y"}, ignore_applies: {} }, applies=[], after=1
            Script { record: Record { parent: Some(9), children: 19..20, children_text: true, conf_values: 18..19, param_groups: 6..6, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=1
        Node { names: {}, ignore_applies: {} }, applies=[], after=0
            Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Script { record: Record { parent: Some(10), children: 27..28, children_text: true, conf_values: 26..27, param_groups: 9..9, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=0
        Node { names: {}, ignore_applies: {} }, applies=[], after=0
            Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Attrib { name: "pressable", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
            Script { record: Record { parent: Some(11), children: 36..49, children_text: true, conf_values: 35..36, param_groups: 13..13, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=0
    Node { names: {}, ignore_applies: {} }, applies=[], after=0
        Attrib { name: "padding_left", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "padding_right", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "padding_top", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "padding_bottom", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "hgap", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "vgap", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "span", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Script { record: Record { parent: Some(2), children: 59..64, children_text: true, conf_values: 58..59, param_groups: 18..18, node_label: None, branch_name: Some(11), tag: true } }, applies=[], after=0


=====
node {}, e=0, ignaps={}, from=0, params={22}, scr=true, ascr=true, orig=_
    stub "test", e=1, from=0, params={3, 9, 11, 16}, scr=true, ascr=true, orig=_
        script, e=2, from=1, params={}, scr=true, ascr=false
        node {"x"}, e=3, ignaps={}, from=1, params={9}, scr=true, ascr=true, orig=_
            attrib "color", e=4, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=3, params={}, scr=false, ascr=false, orig=_
            attrib "width", e=5, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=3, params={}, scr=false, ascr=false, orig=_
            attrib "height", e=6, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=3, params={}, scr=false, ascr=false, orig=_
            apply, e=7 : "y", from=3, params={}, used=true, scr=true, ascr=false
                script, e=8, from=7, params={}, scr=true, ascr=false
            node {"y"}, e=9, ignaps={}, from=3, params={}, scr=false, ascr=false, orig=_
                apply use, e=32 : e2=7, from=3, params={}, scr=false, ascr=false
            script, e=10, from=3, params={}, scr=true, ascr=false
        node {}, e=11, ignaps={}, from=1, params={}, scr=true, ascr=false, orig=_
            attrib "color", e=12, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=11, params={}, scr=false, ascr=false, orig=_
            attrib "width", e=13, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=11, params={}, scr=false, ascr=false, orig=_
            attrib "height", e=14, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=11, params={}, scr=false, ascr=false, orig=_
            script, e=15, from=11, params={}, scr=true, ascr=false
        node {}, e=16, ignaps={}, from=1, params={}, scr=true, ascr=false, orig=_
            attrib "color", e=17, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=16, params={}, scr=false, ascr=false, orig=_
            attrib "width", e=18, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=16, params={}, scr=false, ascr=false, orig=_
            attrib "height", e=19, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=16, params={}, scr=false, ascr=false, orig=_
            attrib "pressable", e=20, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=16, params={}, scr=false, ascr=false, orig=_
            script, e=21, from=16, params={}, scr=true, ascr=false
    node {}, e=22, ignaps={}, from=0, params={}, scr=true, ascr=false, orig=_
        attrib "padding_left", e=23, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "padding_right", e=24, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "padding_top", e=25, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "padding_bottom", e=26, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "color", e=27, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "hgap", e=28, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "vgap", e=29, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        attrib "span", e=30, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=22, params={}, scr=false, ascr=false, orig=_
        script, e=31, from=22, params={}, scr=true, ascr=false
root
    call_stub 0, is_root=true
    stub "test"
        call_stub 1, is_root=false
        script
        script
        decl Node(3)([]), => [(None, ApplyDecl(7))]
            decl Apply(7)([]), => []
                script
            script
        call_node Node(3)([Node(3)]), in_func=false, ret=true
        decl Node(11)([]), => []
            script
        call_node Node(11)([Node(11)]), in_func=false, ret=false
        decl Node(16)([]), => []
            script
            script
            script
            script
            script
            script
            script
            script
            script
            script
            script
            script
            script
        call_node Node(16)([Node(16)]), in_func=false, ret=false
        call_apply Some((Node(3), [])) ApplyDecl(7)([Node(9)]) => None
    decl Node(22)([]), => []
        script
        script
        script
        script
        script
    call_node Node(22)([Node(22)]), in_func=false, ret=false
===

var root, _stubs
var _ns [call _stubs 0 root]
var env _ns.e0
fn stub_test (self) {
    var _ns [call _stubs 1 self]
    #var node_x self.children.x.0
    #var node_x env.x.0
    fn _n3 (self) {
        fn _a7 (self) {
            var hello 5;
        }
        println "hello1 {self}"
        return [dict ("a7" _a7)]
    }
    var _rn3 [call _n3 _ns.n3]
    fn _n11 (self) {
        println "hello2 {self}"
    }
    call _n11 _ns.n11
    fn _n16 (self) {
        println "hello3 {self}"
        var a 0.0
        add_event_listener self "click" [fn () {
            println "hello {self} {}" (cos a)
            println "col {}" self.color.rgb
            set self.color.rgb (vec3 (abs (* (cos a) (sin a))) 1.0 0.2)
            set a (+ a 0.1)
            #println "is {}" self.parent.children.x
            #println self.parent.children.0
            #set self.parent.children.0.hide true
            #set self.parent.children.x.0.hide true
            #set node_x.hide true
        }]
    }
    call _n16 _ns.n16
    call _rn3.a7 _ns.n9
}
fn _n22 (self) {
    println "hello0 {self}"
    call stub_test self
    call stub_test self
    call stub_test self
    call stub_test self
}
call _n22 _ns.n22

====
hello0 7v1
hello1 8v1
hello2 10v1
hello3 11v1
hello1 12v1
hello2 14v1
hello3 15v1
hello1 16v1
hello2 18v1
hello3 19v1
hello1 20v1
hello2 22v1
hello3 23v1
2025-09-11T07:44:21.906297Z  INFO system{name="bevy_asset::server::handle_internal_asset_events"}: bevy_asset::server: Reloading test.ui_conf because it has changed
asset  LoadedWithDependencies { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }
asset  Modified { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }


Node { names: {}, ignore_applies: {} }, applies=[], after=0
    Node { names: {}, ignore_applies: {} }, applies=[], after=0
        Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Script { record: Record { parent: Some(1), children: 10..12, children_text: true, conf_values: 9..10, param_groups: 4..4, node_label: None, branch_name: Some(4), tag: true } }, applies=[], after=0


=====
node {}, e=0, ignaps={}, from=0, params={1}, scr=true, ascr=false, orig=_
    node {}, e=1, ignaps={}, from=0, params={}, scr=true, ascr=false, orig=_
        attrib "width", e=2, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=1, params={}, scr=false, ascr=false, orig=_
        attrib "height", e=3, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=1, params={}, scr=false, ascr=false, orig=_
        attrib "color", e=4, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=1, params={}, scr=false, ascr=false, orig=_
        script, e=5, from=1, params={}, scr=true, ascr=false
root
    call_stub 0, is_root=true
    decl Node(1)([]), => []
        script
        script
    call_node Node(1)([Node(1)]), in_func=false, ret=false
===

var root, _stubs
var _ns [call _stubs 0 root]
var env _ns.e0
fn _n1 (self) {
    var a0
    println self
}
call _n1 _ns.n1

====
23v2
2025-09-11T07:44:43.736978Z  INFO system{name="bevy_asset::server::handle_internal_asset_events"}: bevy_asset::server: Reloading test.ui_conf because it has changed
asset  LoadedWithDependencies { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }
asset  Modified { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }


Node { names: {}, ignore_applies: {} }, applies=[], after=0
    TemplateDecl { name: "t", used: true }, applies=[], after=0
    Node { names: {}, ignore_applies: {} }, applies=[], after=0
        Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Script { record: Record { parent: Some(2), children: 12..14, children_text: true, conf_values: 11..12, param_groups: 5..5, node_label: None, branch_name: Some(7), tag: true } }, applies=[], after=0


=====
node {}, e=0, ignaps={}, from=0, params={2}, scr=true, ascr=false, orig=_
    template decl, e=1 : "t", from=0, params={}, used=false, scr=false, ascr=false
    node {}, e=2, ignaps={}, from=0, params={}, scr=true, ascr=false, orig=_
        attrib "width", e=3, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=2, params={}, scr=false, ascr=false, orig=_
        attrib "height", e=4, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=2, params={}, scr=false, ascr=false, orig=_
        attrib "color", e=5, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=2, params={}, scr=false, ascr=false, orig=_
        script, e=6, from=2, params={}, scr=true, ascr=false
root
    call_stub 0, is_root=true
    decl Node(2)([]), => []
        script
        script
    call_node Node(2)([Node(2)]), in_func=false, ret=false
===

var root, _stubs
var _ns [call _stubs 0 root]
var env _ns.e0
fn _n2 (self) {
    var a0
    println self
}
call _n2 _ns.n2

====
23v3
2025-09-11T07:44:49.912608Z  INFO system{name="bevy_asset::server::handle_internal_asset_events"}: bevy_asset::server: Reloading test.ui_conf because it has changed
asset  LoadedWithDependencies { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }


Node { names: {}, ignore_applies: {} }, applies=[], after=0
    TemplateDecl { name: "t", used: true }, applies=[], after=0
    Node { names: {}, ignore_applies: {} }, applies=[], after=0
        TemplateUse { template_decl_element_ind: 1 }, applies=[], after=0
        Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Script { record: Record { parent: Some(2), children: 14..16, children_text: true, conf_values: 13..14, param_groups: 6..6, node_label: None, branch_name: Some(5), tag: true } }, applies=[], after=0


=====
node {}, e=0, ignaps={}, from=0, params={2}, scr=true, ascr=false, orig=_
    template decl, e=1 : "t", from=0, params={}, used=true, scr=false, ascr=false
    node {}, e=2, ignaps={}, from=0, params={}, scr=true, ascr=false, orig=_
        template use, e=3 : "t", e2=1, from=2, params={}, scr=false, ascr=false, orig=_
        attrib "width", e=4, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=2, params={}, scr=false, ascr=false, orig=_
        attrib "height", e=5, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=2, params={}, scr=false, ascr=false, orig=_
        attrib "color", e=6, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=2, params={}, scr=false, ascr=false, orig=_
        script, e=7, from=2, params={}, scr=true, ascr=false
root
    call_stub 0, is_root=true
    decl Node(2)([]), => []
        script
        script
    call_node Node(2)([Node(2)]), in_func=false, ret=false
===

var root, _stubs
var _ns [call _stubs 0 root]
var env _ns.e0
fn _n2 (self) {
    var a0
    println self
}
call _n2 _ns.n2

====
23v4
asset  Modified { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }
2025-09-11T07:44:59.841294Z  INFO system{name="bevy_asset::server::handle_internal_asset_events"}: bevy_asset::server: Reloading test.ui_conf because it has changed
asset  LoadedWithDependencies { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }
asset  Modified { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }


Node { names: {}, ignore_applies: {} }, applies=[], after=0
    TemplateDecl { name: "t", used: true }, applies=[], after=0
        Script { record: Record { parent: Some(1), children: 0..0, children_text: false, conf_values: 2..3, param_groups: 1..1, node_label: None, branch_name: Some(5), tag: true } }, applies=[], after=0
    Node { names: {}, ignore_applies: {} }, applies=[], after=0
        TemplateUse { template_decl_element_ind: 1 }, applies=[], after=0
        Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Script { record: Record { parent: Some(2), children: 15..17, children_text: true, conf_values: 14..15, param_groups: 6..6, node_label: None, branch_name: Some(5), tag: true } }, applies=[], after=0


=====
node {}, e=0, ignaps={}, from=0, params={3}, scr=true, ascr=false, orig=_
    template decl, e=1 : "t", from=0, params={}, used=true, scr=true, ascr=false
        script, e=2, from=1, params={}, scr=true, ascr=false
    node {}, e=3, ignaps={}, from=0, params={}, scr=true, ascr=false, orig=_
        template use, e=4 : "t", e2=1, from=3, params={}, scr=true, ascr=false, orig=_
        attrib "width", e=5, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=3, params={}, scr=false, ascr=false, orig=_
        attrib "height", e=6, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=3, params={}, scr=false, ascr=false, orig=_
        attrib "color", e=7, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=3, params={}, scr=false, ascr=false, orig=_
        script, e=8, from=3, params={}, scr=true, ascr=false
root
    call_stub 0, is_root=true
    decl Template(1)([]), => []
    decl Node(3)([]), => []
        call_template TemplateDecl(1)([]) => None
        script
        script
    call_node Node(3)([Node(3)]), in_func=false, ret=false
===

var root, _stubs
var _ns [call _stubs 0 root]
var env _ns.e0
fn _t1 (self) {
}
fn _n3 (self) {
    call _t1 self
    var a0
    println self
}
call _n3 _ns.n3

====
23v5
2025-09-11T07:45:48.758924Z  INFO system{name="bevy_asset::server::handle_internal_asset_events"}: bevy_asset::server: Reloading test.ui_conf because it has changed
asset  LoadedWithDependencies { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }
asset  Modified { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }
2025-09-11T07:45:48.844223Z  INFO system{name="bevy_asset::server::handle_internal_asset_events"}: bevy_asset::server: Reloading test.ui_conf because it has changed
asset  LoadedWithDependencies { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }
asset  Modified { id: AssetId<bevy_table_uix::assets::UiAsset>{ index: 0, generation: 0} }


Node { names: {}, ignore_applies: {} }, applies=[], after=0
    TemplateDecl { name: "t", used: true }, applies=[], after=0
        Node { names: {}, ignore_applies: {} }, applies=[], after=0
            Script { record: Record { parent: Some(8), children: 0..0, children_text: false, conf_values: 3..4, param_groups: 2..2, node_label: None, branch_name: Some(5), tag: true } }, applies=[], after=0
    Node { names: {}, ignore_applies: {} }, applies=[], after=0
        TemplateUse { template_decl_element_ind: 1 }, applies=[], after=0
        Attrib { name: "width", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "height", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Attrib { name: "color", on_state: None, in_template: None, func: ElementAttribFunc, in_node: true, calcd: ElementAttribCalc { in_template: None, in_apply: None, used: false, ok: false } }, applies=[], after=0
        Script { record: Record { parent: Some(2), children: 16..18, children_text: true, conf_values: 15..16, param_groups: 7..7, node_label: None, branch_name: Some(5), tag: true } }, applies=[], after=0


=====
node {}, e=0, ignaps={}, from=0, params={4, 10}, scr=true, ascr=false, orig=_
    template decl, e=1 : "t", from=0, params={2}, used=true, scr=true, ascr=false
        node {}, e=2, ignaps={}, from=1, params={}, scr=true, ascr=false, orig=_
            script, e=3, from=2, params={}, scr=true, ascr=false
    node {}, e=4, ignaps={}, from=0, params={10}, scr=true, ascr=false, orig=_
        template use, e=5 : "t", e2=1, from=4, params={10}, scr=true, ascr=false, orig=_
            node {}, e=10, ignaps={}, from=5, params={}, scr=false, ascr=false, orig=2
        attrib "width", e=6, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=4, params={}, scr=false, ascr=false, orig=_
        attrib "height", e=7, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=4, params={}, scr=false, ascr=false, orig=_
        attrib "color", e=8, in_node=true, calcd=ElementAttribCalc { in_template: None, in_apply: None, used: true, ok: true }, from=4, params={}, scr=false, ascr=false, orig=_
        script, e=9, from=4, params={}, scr=true, ascr=false
root
    call_stub 0, is_root=true
    decl Template(1)([Node(2)]), => []
        decl Node(2)([]), => []
        call_node Node(2)([Node(2)]), in_func=true, ret=false
    decl Node(4)([Node(10)]), => []
        call_template TemplateDecl(1)([Node(10)]) => None
        script
        script
    call_node Node(4)([Node(4), Node(10)]), in_func=false, ret=false
===

var root, _stubs
var _ns [call _stubs 0 root]
var env _ns.e0
var env _ns.e0
var env _ns.e0
fn _t1 (self _p2) {
    fn _n2 (self) {
    }
    call _n2 _p2
}
fn _n4 (self _p10) {
    call _t1 self _p10
    var a0
    println self
}
call _n4 _ns.n4 _ns.n10

====
23v6



